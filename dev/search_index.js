var documenterSearchIndex = {"docs":
[{"location":"#WaveSpectra.jl-Documentation","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.jl Documentation","text":"","category":"section"},{"location":"","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.jl Documentation","text":"","category":"page"},{"location":"#Functions","page":"WaveSpectra.jl Documentation","title":"Functions","text":"","category":"section"},{"location":"","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.jl Documentation","text":"DiscreteOmnidirectionalSpectrum\nspectral_moment\nenergy_period\nsignificant_waveheight\nfrequency_unit\nfrequency_dimension\nquantity","category":"page"},{"location":"#WaveSpectra.DiscreteOmnidirectionalSpectrum","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.DiscreteOmnidirectionalSpectrum","text":"DiscreteOmnidirectionalSpectrum(value::AbstractVecOrMat{<:Quantity}, frequency::AbstractVector{<:Quantity}; [density::Bool=true])\n\nCreate discrete omnidirectional spectrum Struct using two Unitful vectors, or vector and matrix.\n\nExample\n\njulia> using WaveSpectra, Unitful\n\njulia> v1=f=range(1u\"Hz\", 3u\"Hz\", 3)\n(1.0:1.0:3.0) Hz\n\njulia> s1 = DiscreteOmnidirectionalSpectrum(v1,f)\nPARAMS: {Quantity{Float64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Quantity{Float64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Density=true, Value Dims=1}\nFREQUENCY       {Hz}:   1.0:1.0:3.0\nVALUES (3,)     {Hz}:   1.0:1.0:3.0\n\njulia> v2 = ones(typeof(1u\"Hz\"), 3, 3)\n3√ó3 Matrix{Quantity{Int64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}}}:\n1 Hz  1 Hz  1 Hz\n1 Hz  1 Hz  1 Hz\n1 Hz  1 Hz  1 Hz\n\njulia> s2 = DiscreteOmnidirectionalSpectrum(v2, f)\nPARAMS: {Quantity{Int64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Quantity{Float64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Density=true, Value Dims=2}\nFREQUENCY       {Hz}:   1.0:1.0:3.0\nVALUES (3, 3)   {Hz}:   1.0 ‚Ä¶ 1.0\n                        ‚ãÆ   ‚ã±   ‚ãÆ\n                        1.0 ‚Ä¶ 1.0\n\njulia> func(x) = x\nfunc (generic function with 1 method)\n\njulia> s3 = DiscreteOmnidirectionalSpectrum(func, f)\nPARAMS: {Unitful.Quantity{Float64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Unitful.Quantity{Float64, ùêì‚Åª¬π, Unitful.FreeUnits{(Hz,), ùêì‚Åª¬π, nothing}},\n        Density=true, Value Dims=1}\nFREQUENCY       {Hz}:   1.0:1.0:3.0\nVALUES (3,)     {Hz}:   [1.0, 2.0, 3.0]\n\n```\n\n\n\n\n\n","category":"type"},{"location":"#WaveSpectra.spectral_moment","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.spectral_moment","text":"spectral_moment(spectrum::DiscreteOmnidirectionalSpectrum, n::Real=0; alg::AbstractIntegralAlgorithm=TrapezoidalRule())\n\nCalculate the spectral moment of a discrete spectra struct.\n\nExample\n\njulia> using WaveSpectra, Unitful\n\njulia> v=f=range(1u\"Hz\", 5u\"Hz\", 5)\n(1.0:1.0:5.0) Hz\n\njulia> s = DiscreteOmnidirectionalSpectrum(v,f);\n\njulia> spectral_moment(s, 0)\n12.0 s‚Åª¬≤\n\n\n\n\n\n\n","category":"function"},{"location":"#WaveSpectra.energy_period","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.energy_period","text":"energy_period(spectrum::DiscreteOmnidirectionalSpectrum; alg::AbstractIntegralAlgorithm=TrapezoidalRule())\n\nCalculate the energy period of a discrete spectra struct.\n\nExample\n\njulia> using WaveSpectra, Unitful\n\njulia> v=f=range(1u\"Hz\", 5u\"Hz\", 5)\n(1.0:1.0:5.0) Hz\n\njulia> s = DiscreteOmnidirectionalSpectrum(v,f);\n\njulia> energy_period(s)\n0.3333333333333333 s\n\n\n\n\n\n\n","category":"function"},{"location":"#WaveSpectra.significant_waveheight","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.significant_waveheight","text":"significant_waveheight(spectrum::DiscreteOmnidirectionalSpectrum; alg::AbstractIntegralAlgorithm=TrapezoidalRule())\n\nCalculate the significant waveheight of a discrete spectra struct.\n\nExample\n\njulia> using WaveSpectra, Unitful\n\njulia> v=f=range(1u\"Hz\", 5u\"Hz\", 5)\n(1.0:1.0:5.0) Hz\n\njulia> s = DiscreteOmnidirectionalSpectrum(v,f);\n\njulia> significant_waveheight(s)\n13.856406460551018 s‚Åª¬π\n\n\n\n\n\n\n","category":"function"},{"location":"#WaveSpectra.frequency_unit","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.frequency_unit","text":"frequency_unit(::DiscreteOmnidirectionalSpectrum)\n\nReturn the units of the frequency vector in the struct\n\n\n\n\n\n","category":"function"},{"location":"#WaveSpectra.frequency_dimension","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.frequency_dimension","text":"frequency_dimension(::DiscreteOmnidirectionalSpectrum)\n\nReturn the dimension of the frequency vector in the struct\n\n\n\n\n\n","category":"function"},{"location":"#WaveSpectra.quantity","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.quantity","text":"quantity(::DiscreteOmnidirectionalSpectrum)\n\nReturn the dimensions and units of the product between spectra and frequency.\n\n\n\n\n\n","category":"function"},{"location":"#Index","page":"WaveSpectra.jl Documentation","title":"Index","text":"","category":"section"},{"location":"","page":"WaveSpectra.jl Documentation","title":"WaveSpectra.jl Documentation","text":"","category":"page"}]
}
